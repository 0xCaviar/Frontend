{"version":3,"sources":["config/constants/contracts.js","utils/addressHelpers.js","utils/multicall.js","config/constants/types.js","config/constants/farms.js","config/constants/numbers.js","utils/formatNumber.js","config/constants/tokens.js","api.js","context/RefreshContext.js","hooks/useRefresh.js","utils/getRpcUrl.js","utils/web3.js","hooks/useWeb3.js","hooks/useFarms.js","hooks/usePrices.js","fetchFarmUser.js","pages/Home.js","utils/contractHelpers.js","hooks/useContract.js","utils/callHelpers.js","hooks/useUnStake.js","utils/index.js","store.js","components/StakeModal.js","components/Farm.js","hooks/useApprove.js","hooks/useStake.js","pages/Deposit.js","hooks/useFarmsUser.js","components/LiquidNavbar.js","connectors.js","utils/addRPC.js","components/Wallets.js","App.js","reportWebVitals.js","utils/Web3ReactManager.js","hooks.js","index.js"],"names":["LQDR","3","250","FTM","FRAX","FXS","FUSDT","USDC","MasterChef","Sushi","MulltiCall","getMasterChefAddress","chainId","addresses","getSushiAddress","getMulticallAddress","multicall","web3","abi","calls","a","multi","eth","Contract","MultiCallAbi","itf","Interface","calldata","map","call","address","toLowerCase","encodeFunctionData","name","params","methods","aggregate","returnData","res","i","decodeFunctionResult","QuoteToken","Object","freeze","USDT","ETH","farms","pid","risk","lpSymbol","lpAddresses","tokenSymbol","tokenAddresses","quoteTokenSymbol","quoteTokenAdresses","contracts","icon","ZERO","BigNumber","TEN","isZero","number","isEqual","number2","eq","toWei","decimals","times","pow","fromWei","div","getFullDisplayBalance","balance","toFixed","DefultTokens","SushiRouteName","getSushiRoute","token","getLastRouteName","path","length","fetchFarms","MasterChefAddress","Promise","all","farmsConfig","filter","farm","farmConfig","lpAdress","isTokenOnly","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","tokenPriceVsQuote","lpTotalInQuoteToken","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","info","totalAllocPoint","lqdrPerBlock","allocPoint","_hex","poolWeight","totalStaked","totalSupply","toJSON","toNumber","multiplierShow","toString","multiplier","depositFeeBP","data","fetchQuoteTokenPrices","SushiAddress","smallAmount","tokens","SushiAbi","priceMap","index","out","amount","amounts","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","useRefresh","useContext","fastRefresh","slowRefresh","nodes","RPC_URL","randomIndex","random","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getWeb3NoAccount","useWeb3","library","useWeb3React","refEth","useRef","setweb3","current","useFarms","forceUpdate","setFarms","console","error","getPools","usePrices","prices","setPrices","getPrice","fetchFarmUserAllowances","account","masterChefAdress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","arrayOfUserDataObjects","farmAllowance","allowance","earnings","observer","useHistory","tvl","TVL","setTVL","val","plus","getTVL","useTotalValue","className","src","process","toFormat","href","getContract","useERC20","useMemo","isAddress","ERC20Abi","getERC20Contract","useMasterChef","MasterChefAbi","getMasterChefContract","approve","lpContract","contractAddress","ethers","constants","MaxUint256","send","from","stake","masterChefContract","deposit","on","tx","transactionHash","unstake","withdraw","useUnStake","onUnStake","useCallback","getExplorerAddress","store","show_connect","show_amount_popup","makeAutoObservable","this","StakeModal","show","onClose","onConfirm","symbol","inputAmount","setInputAmount","onMax","Modal","size","aria-labelledby","centered","onHide","Header","closeButton","Title","Body","type","min","onChange","e","currentTarget","onClick","userInfo","stakePopup","setStakePopup","unStakePopup","setUnStakePopup","details","setDetails","stakeInput","setStakeInput","unStakeInput","setUnStakeInput","requestedApproval","setRequestedApproval","onApprove","lpAddress","contract","useApprove","onStake","useStake","onHarvest","handleApprove","status","log","handleStake","handleUnStake","handleHarvest","lqdrPrice","style","background","Number","gt","showConnectPopup","isNaN","marginTop","marginBottom","rel","target","update","setUpdate","users","setUsers","getUserData","useFarmsUser","id","readOnly","htmlFor","height","menu","setMenu","deactivate","isDesktop","useMediaQuery","query","Navbar","bg","variant","zIndex","expand","Brand","width","marginRight","alt","Nav","Item","Link","substring","injected","InjectedConnector","supportedChainIds","NetworksData","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","iconUrls","activate","hideConnectPopup","UnsupportedChainIdError","NotificationManager","display","borderRadius","textAlign","padding","margin","window","ethereum","request","method","then","result","catch","addRPC","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Web3ReactManager","context","connector","active","networkError","triedEager","tried","setTried","isAuthorized","undefined","useEagerConnect","activatingConnector","setActivatingConnector","suppress","handleChainChanged","handleAccountsChanged","accounts","removeListener","useInactiveListener","ReactDOM","render","StrictMode","getLibrary","provider","document","getElementById"],"mappings":"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","file":"static/js/main.69e6dca3.chunk.js","sourcesContent":["export default {\n  LQDR: {\n    3: '0x6491fc29e175cde591f705a9694f48f4effd5d07',\n    250: '0x6491FC29E175CdE591f705a9694F48F4eFFd5d07',\n  },\n  FTM: {\n    3: '0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83',\n    250: '0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83',\n  },\n  FRAX: {\n    3: '',\n    250: '0xaf319E5789945197e365E7f7fbFc56B130523B33',\n  },\n  FXS: {\n    3: '',\n    250: '0x82F8Cb20c14F134fe6Ebf7aC3B903B2117aAfa62',\n  },\n  FUSDT: {\n    3: '',\n    250: '0x049d68029688eabf473097a2fc38ef61633a3c7a',\n  },\n  USDC: {\n    3: '',\n    250: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',\n  },\n  MasterChef: {\n    3: '0x42fd1A2dbc2069B6E700ae3774533B87dB4e137B',\n    250: '0x742474dae70fa2ab063ab786b1fbe5704e861a0c',\n  },\n  Sushi: {\n    3: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n    250: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  },\n  MulltiCall: {\n    3: '0x53c43764255c17bd724f74c4ef150724ac50a3ed',\n    250: '0x63B8310c5093ac917552931D8b15d5AB6945c0a6',\n  },\n}\n\n/**\n YFI/FTM : 4x  0x280abc0d9727f4de3a46ca9cf93c16b4a9c127d1\nDAI/FTM: 4X 0xd32f2eb49e91aa160946f3538564118388d6246a\nLINK/FTM: 4x 0x1ca86e57103564f47ffcea7259a6ce8cc1301549\nwETH/FTM: 4x 0x3d0bd54c48c2c433ea6fed609cc3d5fb7a77622b\nfUSDT/FTM: 4x 0xd019dd7c760c6431797d6ed170bffb8faee11f99\nWBTC/FTM: 4x 0xc92d97416328a461bce2f539498b505c6c97748f\nSUSHI/FTM : 4x 0x49d2e0dc99c7358d7a9a8633bf6df111d0ee7f65\nCREAM/FTM: 4x 0x147e27be8e66f74c7659d88e2e6a13188873d58b\nFRAX/FXS: 3x 0xcff4353e10a7207bd16427ca9549437d439b68df\nAAVE/USDC: 2x 0x2d89bb3b1448152002453aa37fbe4051afdbf56d\nSNX/FTM: 2x 0xfe69403cf2e22390c0d87ab05062f67d9084935b\nICE/FTM: 2x 0x84311ecc54d7553378c067282940b0fdfb913675\nCOVER/FTM: 2x 0xafa1bf9b2a89dfd60499838c331538283b3346ed\nZOO/FTM : 1x 0x3ac28d350c59ef9054b305dfe9078fadc3cecabe\nSFI/FTM: 1x 0xc24afba17c981326aa14238fcb55abc7d0907808\nCRV/FTM: 1x 0x177e2cc843d2ee20aa884dc8af2a865adf78adb2\nfUSDT/FRAX : 2x 0x4669751cd7933c9ca2ac8147ae7043d8561f4c8d\n\n */\n","import addresses from '../config/constants/contracts'\n\nexport const getMasterChefAddress = (chainId = 3) => {\n  return addresses.MasterChef[chainId]\n}\nexport const getSushiAddress = (chainId = 3) => {\n  return addresses.Sushi[chainId]\n}\n\nexport const getMulticallAddress = (chainId = 3) => {\n  return addresses.MulltiCall[chainId]\n}","import { Interface } from '@ethersproject/abi'\nimport MultiCallAbi from '../config/abi/Multicall.json'\nimport { getMulticallAddress } from '../utils/addressHelpers'\n\nconst multicall = async (web3, abi, calls, chainId = 3) => {\n    const multi = new web3.eth.Contract(\n        MultiCallAbi,\n        getMulticallAddress(chainId)\n    )\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => [\n        call.address.toLowerCase(),\n        itf.encodeFunctionData(call.name, call.params),\n    ])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    const res = returnData.map((call, i) =>\n        itf.decodeFunctionResult(calls[i].name, call)\n    )\n\n    return res\n}\n\nexport default multicall\n","export const QuoteToken = Object.freeze({\n  USDC: 'USDC',\n  USDT: 'USDT',\n  FUSDT: 'FUSDT',\n  FXS: 'FXS',\n  FRAX: 'FRAX',\n  LQDR: 'LQDR',\n  ETH: 'ETH',\n  FTM: 'FTM',\n})\n","import contracts from './contracts'\nimport { QuoteToken } from './types'\n//0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9\nconst farms = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'YFI/FTM',\n    lpAddresses: {\n      250: \"0x280abc0d9727f4de3a46ca9cf93c16b4a9c127d1\",\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'YFI-FTM.png'\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'DAI/FTM',\n    lpAddresses: {\n      250: \"0xd32f2eb49e91aa160946f3538564118388d6246a\",\n      3: '0xe10c2de405d12a8344cc5945df6f398660857760',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'DAI-FTM.png'\n  },\n  {\n    pid: 2,\n    risk: 5,\n    lpSymbol: 'LINK/FTM',\n    lpAddresses: {\n      250: '0x1ca86e57103564f47ffcea7259a6ce8cc1301549',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '0x6491FC29E175CdE591f705a9694F48F4eFFd5d07',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'LINK-FTM.png'\n  },\n  {\n    pid: 3,\n    risk: 5,\n    lpSymbol: 'wETH/FTM',\n    lpAddresses: {\n      250: '0x3d0bd54c48c2c433ea6fed609cc3d5fb7a77622b',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'wETH-FTM.png'\n  },\n  {\n    pid: 4,\n    risk: 5,\n    lpSymbol: 'fUSDT/FTM',\n    lpAddresses: {\n      250: '0xd019dd7c760c6431797d6ed170bffb8faee11f99',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'fUSDT-FTM.png'\n  },\n  {\n    pid: 5,\n    risk: 5,\n    lpSymbol: 'WBTC/FTM',\n    lpAddresses: {\n      250: '0xc92d97416328a461bce2f539498b505c6c97748f',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'WBTC-FTM.png'\n  },\n  {\n    pid: 6,\n    risk: 5,\n    lpSymbol: 'SUSHI/FTM',\n    lpAddresses: {\n      250: '0x49d2e0dc99c7358d7a9a8633bf6df111d0ee7f65',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'SUSHI-FTM.png'\n  },\n  {\n    pid: 7,\n    risk: 5,\n    lpSymbol: 'CREAM/FTM',\n    lpAddresses: {\n      250: '0x147e27be8e66f74c7659d88e2e6a13188873d58b',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'CREAM-FTM.png'\n  },\n  {\n    pid: 8,\n    risk: 5,\n    lpSymbol: 'FRAX/FXS',\n    lpAddresses: {\n      250: '0xcff4353e10a7207bd16427ca9549437d439b68df',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FXS,\n    quoteTokenAdresses: contracts.FXS,\n    icon: 'FRAX-FXS.png'\n  },\n  {\n    pid: 9,\n    risk: 5,\n    lpSymbol: 'AAVE/USDC',\n    lpAddresses: {\n      250: '0x2d89bb3b1448152002453aa37fbe4051afdbf56d',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.USDC,\n    quoteTokenAdresses: contracts.USDC,\n    icon: 'AAVE-USDC.png'\n  },\n  {\n    pid: 10,\n    risk: 5,\n    lpSymbol: 'SNX/FTM',\n    lpAddresses: {\n      250: '0xfe69403cf2e22390c0d87ab05062f67d9084935b',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'SNX-FTM.png'\n  },\n  {\n    pid: 11,\n    risk: 5,\n    lpSymbol: 'ICE/FTM',\n    lpAddresses: {\n      250: '0x84311ecc54d7553378c067282940b0fdfb913675',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'ICE-FTM.png'\n  },\n  {\n    pid: 12,\n    risk: 5,\n    lpSymbol: 'COVER/FTM',\n    lpAddresses: {\n      250: '0xafa1bf9b2a89dfd60499838c331538283b3346ed',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'COVER-FTM.png'\n  },\n  {\n    pid: 13,\n    risk: 5,\n    lpSymbol: 'ZOO/FTM',\n    lpAddresses: {\n      250: '0x3ac28d350c59ef9054b305dfe9078fadc3cecabe',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'ZOO-FTM.png'\n  },\n  {\n    pid: 14,\n    risk: 5,\n    lpSymbol: 'SFI/FTM',\n    lpAddresses: {\n      250: '0xc24afba17c981326aa14238fcb55abc7d0907808',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'SFI-FTM.png'\n  },\n  {\n    pid: 15,\n    risk: 5,\n    lpSymbol: 'CRV/FTM',\n    lpAddresses: {\n      250: '0x177e2cc843d2ee20aa884dc8af2a865adf78adb2',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FTM,\n    quoteTokenAdresses: contracts.FTM,\n    icon: 'CRV-FTM.png'\n  },\n  {\n    pid: 16,\n    risk: 5,\n    lpSymbol: 'fUSDT/FRAX',\n    lpAddresses: {\n      250: '0x4669751cd7933c9ca2ac8147ae7043d8561f4c8d',\n      3: '',\n    },\n    tokenSymbol: 'LQDR',\n    tokenAddresses: {\n      250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n      3: '',\n    },\n    quoteTokenSymbol: QuoteToken.FRAX,\n    quoteTokenAdresses: contracts.FRAX,\n    icon: 'fUSDT-FRAX.png'\n  },\n]\n\nexport default farms\n","import BigNumber from \"bignumber.js\";\n\n// BigNumber.config({\n//     EXPONENTIAL_AT: 1000,\n//     DECIMAL_PLACES: 80,\n// })\n\n// export const BLOCKS_PER_YEAR = new BigNumber(10512000)\n\nexport const ZERO = new BigNumber(0)\nexport const TEN = new BigNumber(10)\n\nexport const isZero = (number) => {\n    return isEqual(number, ZERO)\n}\n\nexport const isEqual = (number, number2) => {\n    return new BigNumber(number).eq(number2)\n}\n\nexport const isGt = (number, number2) => {\n    return new BigNumber(number).gt(number2)\n}\n\n","import BigNumber from \"bignumber.js\";\nimport { TEN } from \"../config/constants/numbers\";\n\n// BigNumber.DEBUG = true\n\n// BigNumber.config({ DECIMAL_PLACES: 30, ROUNDING_MODE: BigNumber.ROUND_DOWN })\n\nexport const toWei = (number, decimals = 18) => (new BigNumber(number).times(TEN.pow(decimals)))\n\nexport const fromWei = (number, decimals = 18) => (new BigNumber(number).div(TEN.pow(decimals)))\n\nexport const getBalanceNumber = (balance, decimals = 18) => {\n    return fromWei(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance, decimals = 18) => {\n    return fromWei(balance, decimals).toFixed()\n}","export const DefultTokens = {\n    \"LQDR\": {\n        decimals: 18,\n        address: {\n            3: '',\n            250: '0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9',\n        }\n    },\n    \"FUSDT\": {\n        decimals: 6,\n        address: {\n            3: '',\n            250: '0x049d68029688eabf473097a2fc38ef61633a3c7a',\n        }\n    },\n    \"FTM\": {\n        decimals: 18,\n        address: {\n            3: '',\n            250: '0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83',\n        }\n    },\n    \"ETH\": {\n        decimals: 18,\n        address: {\n            3: '',\n            250: '0x74b23882a30290451A17c44f4F05243b6b58C76d',\n        }\n    },\n    \"FXS\": {\n        decimals: 18,\n        address: {\n            3: '',\n            250: '0x82F8Cb20c14F134fe6Ebf7aC3B903B2117aAfa62',\n        }\n    },\n    \"FRAX\": {\n        decimals: 18,\n        address: {\n            3: '',\n            250: '0xaf319E5789945197e365E7f7fbFc56B130523B33',\n        }\n    },\n    \"USDC\": {\n        decimals: 6,\n        address: {\n            3: '',\n            250: '0x04068da6c83afcfa0e13ba15a6696662335d5b75',\n        }\n    },\n    \"WBTC\": {\n        decimals: 8,\n        address: {\n            3: '',\n            250: '0x321162Cd933E2Be498Cd2267a90534A804051b11',\n        }\n    },\n}\n\nconst SushiRouteName = {\n    \"WBTC\": [\"WBTC\", \"FTM\", \"FUSDT\"],\n    \"FTM\": [\"FTM\", \"FUSDT\"],\n    \"FRAX\": [\"FRAX\", \"FUSDT\"],\n    \"FXS\": [\"FXS\", \"FRAX\"],\n    \"LQDR\": [\"LQDR\", \"FUSDT\"],\n    \"USDC\": [\"USDC\", \"FUSDT\"],\n}\n\nexport const getSushiRoute = (token, chainId) => {\n    return SushiRouteName[token].map(name => DefultTokens[name].address[chainId])\n}\n\nexport const getLastRouteName = (token) => {\n    const path = SushiRouteName[token]\n    return path[path.length - 1]\n}\n\n\n/**\nSushi :0xae75A438b2E0cB8Bb01Ec1E1e376De11D44477CC\nYFI: 0x29b0Da86e484E1C0029B56e817912d778aC0EC69\nDAI: 0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e\nLINK: 0xb3654dc3d10ea7645f8319668e8f54d2574fbdc8\nETH: 0x74b23882a30290451A17c44f4F05243b6b58C76d\nfUSDT: 0x049d68029688eabf473097a2fc38ef61633a3c7a\nWBTC: 0x321162Cd933E2Be498Cd2267a90534A804051b11\nCREAM: 0x657A1861c15A3deD9AF0B6799a195a249ebdCbc6\nFRAX: 0xaf319E5789945197e365E7f7fbFc56B130523B33\nFXS: 0x82F8Cb20c14F134fe6Ebf7aC3B903B2117aAfa62\nAAVE: 0x6a07A792ab2965C72a5B8088d3a069A7aC3a993B\nUSDC: 0x04068da6c83afcfa0e13ba15a6696662335d5b75\nSNX: 0x56ee926bD8c72B2d5fa1aF4d9E4Cbb515a1E3Adc\nICE: 0xf16e81dce15b08f326220742020379b855b87df9\nCOVER: 0xB01E8419d842beebf1b70A7b5f7142abbaf7159D\nZOO: 0x09e145a1d53c0045f41aeef25d8ff982ae74dd56\nSFI: 0x924828a9Fb17d47D0eb64b57271D10706699Ff11\nCRV : 0x1E4F97b9f9F913c46F1632781732927B9019C68b\n*/","import BigNumber from 'bignumber.js'\nimport erc20 from './config/abi/erc20.json'\nimport masterchefABI from './config/abi/masterchef.json'\nimport SushiAbi from './config/abi/sushi.json'\nimport multicall from './utils/multicall'\nimport { getMasterChefAddress, getSushiAddress } from './utils/addressHelpers'\nimport farmsConfig from './config/constants/farms'\nimport { fromWei, toWei } from './utils/formatNumber'\nimport { QuoteToken } from './config/constants/types'\nimport { DefultTokens, getSushiRoute, getLastRouteName } from './config/constants/tokens'\n\n\nexport const fetchFarms = async (web3, chainId = 250) => {\n  const MasterChefAddress = getMasterChefAddress(chainId)\n\n  const data = await Promise.all(\n    farmsConfig.filter(farm => farm?.lpAddresses[chainId] !== \"\").map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[chainId]\n      const calls = [\n        // Balance of Reward token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[chainId],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[chainId],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[chainId] : lpAdress,\n          name: 'balanceOf',\n          params: [MasterChefAddress],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Reward Token decimals\n        {\n          address: farmConfig.tokenAddresses[chainId],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[chainId],\n          name: 'decimals',\n        },\n      ]\n      // console.log(calls);\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(web3, erc20, calls, chainId)\n\n\n      let tokenAmount\n      let lpTotalInQuoteToken\n      let tokenPriceVsQuote\n\n      if (farmConfig.isTokenOnly) {\n        tokenAmount = fromWei(lpTokenBalanceMC, tokenDecimals)\n        if ((farmConfig.tokenSymbol === QuoteToken.USDC && farmConfig.quoteTokenSymbol === QuoteToken.USDC)) {\n          tokenPriceVsQuote = new BigNumber(1)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\n      } else {\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n\n\n      const [info, totalAllocPoint, lqdrPerBlock] = await multicall(\n        web3,\n        masterchefABI,\n        [\n          {\n            address: MasterChefAddress,\n            name: 'poolInfo',\n            params: [farmConfig.pid],\n          },\n          {\n            address: MasterChefAddress,\n            name: 'totalAllocPoint',\n          },\n          {\n            address: MasterChefAddress,\n            name: 'lqdrPerBlock',\n          },\n        ]\n        , chainId\n      )\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        totalStaked: fromWei(lpTokenBalanceMC).toFixed(3),\n        totalSupply: lpTotalSupply,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount.toNumber(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken,\n        tokenPriceVsQuote: tokenPriceVsQuote.toFixed(8),\n        poolWeight: poolWeight.toNumber(),\n        multiplierShow: `${allocPoint.toString()}X`,\n        multiplier: allocPoint.div(100),\n        depositFeeBP: info.depositFeeBP,\n        lqdrPerBlock: fromWei(lqdrPerBlock),\n      }\n    })\n  )\n  return data\n}\n\nexport const fetchQuoteTokenPrices = async (web3, chainId = 250) => {\n  const SushiAddress = getSushiAddress(chainId)\n  const tokens = [\"FTM\", \"WBTC\", \"FXS\", \"USDC\", \"FRAX\"]\n  const smallAmount = 0.001\n  const calls = tokens.filter(token => DefultTokens[token][chainId] !== \"\").map((token) => {\n\n    return {\n      address: SushiAddress,\n      name: 'getAmountsOut',\n      params: [toWei(smallAmount, DefultTokens[token].decimals).toFixed(), getSushiRoute(token, chainId)],\n    }\n  })\n  // console.log(calls);\n  const data = await Promise.all([\n    await multicall(web3, SushiAbi, calls, chainId)\n  ])\n\n  const priceMap = {}\n  for (let index = 0; index < data[0].length; index++) {\n    const out = data[0][index]\n    const amount = new BigNumber(out.amounts[out.amounts.length - 1].toString())\n    priceMap[tokens[index]] = fromWei(amount, DefultTokens[getLastRouteName(tokens[index])].decimals).div(smallAmount).toNumber()\n  }\n  return priceMap\n}","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n    const [slow, setSlow] = useState(0)\n    const [fast, setFast] = useState(0)\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            setFast((prev) => prev + 1)\n        }, FAST_INTERVAL)\n        return () => clearInterval(interval)\n    }, [])\n\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            setSlow((prev) => prev + 1)\n        }, SLOW_INTERVAL)\n        return () => clearInterval(interval)\n    }, [])\n\n    return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }","import { useContext } from 'react'\nimport { RefreshContext } from '../context/RefreshContext'\n\nconst useRefresh = () => {\n    const { fast, slow } = useContext(RefreshContext)\n    return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [\"https://rpcapi.fantom.network\"]\n\nconst getRpcUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getRpcUrl","import Web3 from 'web3'\nimport getRpcUrl from './getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 })\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from '../utils/web3'\n\nconst useWeb3 = () => {\n    const { library } = useWeb3React()\n    const refEth = useRef(library)\n    const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n    useEffect(() => {\n        if (library !== refEth.current) {\n            setweb3(library ? new Web3(library) : getWeb3NoAccount())\n            refEth.current = library\n        }\n    }, [library])\n\n    return web3\n}\n\nexport default useWeb3","import { useWeb3React } from \"@web3-react/core\"\nimport { useEffect, useState } from \"react\"\nimport { fetchFarms } from \"../api\";\nimport useRefresh from \"./useRefresh\";\nimport useWeb3 from \"./useWeb3\";\n\nexport const useFarms = (forceUpdate) => {\n    const [farms, setFarms] = useState(null)\n\n    const web3 = useWeb3()\n    const { chainId } = useWeb3React()\n    const { fastRefresh } = useRefresh()\n\n    useEffect(() => {\n        const getPools = async () => {\n            try {\n                const farms = await fetchFarms(web3, chainId)\n                setFarms(farms)\n                // console.info('Farms fetched:', farms)\n            } catch (e) {\n                console.error(\"Farms fetched had error\", e)\n            }\n        }\n        if (web3) {\n            getPools()\n        }\n    }, [web3, fastRefresh, forceUpdate])\n\n    return farms\n}\n","import { useEffect, useState } from \"react\"\nimport { fetchQuoteTokenPrices } from \"../api\";\nimport useRefresh from \"./useRefresh\";\nimport useWeb3 from \"./useWeb3\";\n\nexport const usePrices = (forceUpdate) => {\n    const [prices, setPrices] = useState(null)\n\n    const web3 = useWeb3()\n    const { fastRefresh } = useRefresh()\n    useEffect(() => {\n        const getPrice = async () => {\n            try {\n                const prices = await fetchQuoteTokenPrices(web3, 250)\n                prices[\"LQDR\"] = 0\n                setPrices(prices)\n                // console.info('fetchQuoteTokenPrices fetched:', prices)\n            } catch (e) {\n                console.error(\"fetchQuoteTokenPrices fetched had error\", e)\n            }\n        }\n        if (web3) {\n            getPrice()\n        }\n    }, [web3, fastRefresh, forceUpdate])\n\n    return prices\n}\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from './config/abi/erc20.json'\nimport masterchefABI from './config/abi/masterchef.json'\nimport multicall from './utils/multicall'\nimport { getMasterChefAddress } from './utils/addressHelpers'\nimport farmsConfig from './config/constants/farms'\nimport { ZERO } from './config/constants/numbers'\nimport { useFarms } from './hooks/useFarms'\nimport { usePrices } from './hooks/usePrices'\nimport { useEffect, useState } from 'react'\n\nexport const fetchFarmUserAllowances = async (web3, account, chainId) => {\n    const masterChefAdress = getMasterChefAddress(chainId)\n\n    const calls = farmsConfig.map((farm) => {\n        const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[chainId] : farm.lpAddresses[chainId]\n        return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n    })\n\n    const rawLpAllowances = await multicall(web3, erc20ABI, calls, chainId)\n    const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n        return new BigNumber(lpBalance).toString()\n    })\n    return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (web3, account, chainId) => {\n    const calls = farmsConfig.map((farm) => {\n        const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[chainId] : farm.lpAddresses[chainId]\n        return {\n            address: lpContractAddress,\n            name: 'balanceOf',\n            params: [account],\n        }\n    })\n\n    const rawTokenBalances = await multicall(web3, erc20ABI, calls, chainId)\n    const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n        return new BigNumber(tokenBalance).toString()\n    })\n    return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (web3, account, chainId) => {\n    const masterChefAdress = getMasterChefAddress(chainId)\n\n    const calls = farmsConfig.map((farm) => {\n        return {\n            address: masterChefAdress,\n            name: 'userInfo',\n            params: [farm.pid, account],\n        }\n    })\n\n    const rawStakedBalances = await multicall(web3, masterchefABI, calls, chainId)\n    const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n        return new BigNumber(stakedBalance[0]._hex).toString()\n    })\n    return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (web3, account, chainId) => {\n    const masterChefAdress = getMasterChefAddress(chainId)\n\n    const calls = farmsConfig.map((farm) => {\n        return {\n            address: masterChefAdress,\n            name: 'pendingLqdr',\n            params: [farm.pid, account],\n        }\n    })\n\n    const rawEarnings = await multicall(web3, masterchefABI, calls, chainId)\n    const parsedEarnings = rawEarnings.map((earnings) => {\n        return new BigNumber(earnings).toString()\n    })\n    return parsedEarnings\n}\n\n\nexport const fetchFarmUserDataAsync = async (web3, account, chainId) => {\n    const userFarmAllowances = await fetchFarmUserAllowances(web3, account, chainId)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(web3, account, chainId)\n    const userStakedBalances = await fetchFarmUserStakedBalances(web3, account, chainId)\n    // const userFarmEarnings = await fetchFarmUserEarnings(web3, account, chainId)\n\n    const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n        return {\n            index,\n            allowance: userFarmAllowances[index],\n            tokenBalance: userFarmTokenBalances[index],\n            stakedBalance: userStakedBalances[index],\n            earnings: 0,\n        }\n    })\n    return arrayOfUserDataObjects\n}\n\n\nexport const useTotalValue = () => {\n    const [TVL, setTVL] = useState(ZERO)\n    const farms = useFarms();\n    const prices = usePrices()\n\n    useEffect(() => {\n        const getTVL = () => {\n            let value = ZERO;\n            for (let i = 0; i < farms.length; i++) {\n                const farm = farms[i]\n                if (farm.lpTotalInQuoteToken) {\n                    let val = farm.lpTotalInQuoteToken.times(prices[farm.quoteTokenSymbol])\n                    value = value.plus(val);\n                }\n            }\n            return value\n        }\n\n\n        if (farms && prices) {\n            setTVL(getTVL())\n        }\n\n    }, [farms, prices])\n    return TVL;\n}","import { observer } from 'mobx-react'\nimport { useHistory } from 'react-router-dom'\nimport { NotificationManager } from 'react-notifications'\nimport { useTotalValue } from '../fetchFarmUser'\nimport { isZero } from '../config/constants/numbers'\nimport './Home.scss'\n\nfunction HomePage() {\n  const history = useHistory()\n  const tvl = useTotalValue()\n  return (\n    <div className=\"text-center d-flex flex-column position-fixed w-100 h-100 justify-content-center align-items-center text-white\">\n      <img\n        src={`${process.env.PUBLIC_URL}/img/back.jpg`}\n        className=\"position-fixed w-100 h-100 fixed-top back-img\"\n      />\n      <h2 className=\"font-weight-extra-bold\">\n        First Shippers of Deep Liquidity for sushiswap on{' '}\n      </h2>\n      <h2 className=\"font-weight-extra-bold\">Fantom Opera</h2>\n      <p className=\"py-4\">Total Value Locked: {isZero(tvl) ? \"\" : `$${tvl.toFormat(0)}`}</p>\n      <a\n        className=\"font-weight-bold btn btn-primary rounded-2 px-4\"\n        href=\"/deposit\"\n      >\n        Launch LiquidDriver{' '}\n      </a>\n      <div className=\"row px-5 pt-4 mt-5 mx-5\">\n        <div className=\"col-md-3\">\n          <div className=\"tile text-white\">\n            <div className=\"small\">MARKET CAP</div>\n            <h2 className=\"pt-2\"> N/A</h2>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"tile text-white\">\n            <div className=\"small\">LQDR PRICE</div>\n            <h2 className=\"pt-2\"> N/A</h2>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"tile text-white\">\n            <div className=\"small\">CIRCULATING SUPPLY</div>\n            <h2 className=\"pt-2\"> N/A</h2>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"tile text-white\">\n            <div className=\"small\">SUPPLY BURNED</div>\n            <h2 className=\"pt-2\"> N/A</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(HomePage)\n","import web3NoAccount from './web3'\nimport ERC20Abi from '../config/abi/erc20.json'\nimport MasterChefAbi from '../config/abi/masterchef.json'\nimport SushiAbi from '../config/abi/sushi.json'\nimport { getMasterChefAddress } from './addressHelpers'\nimport { getSushiAddress } from './addressHelpers'\n\nconst getContract = (abi, address, web3) => {\n    const _web3 = web3 ?? web3NoAccount\n    return new _web3.eth.Contract(abi, address)\n}\n\nexport const getMasterChefContract = (web3, chainId) => {\n    return getContract(MasterChefAbi, getMasterChefAddress(chainId), web3)\n}\n\nexport const getSushiRouter = (web3, chainId) => {\n    return getContract(SushiAbi, getSushiAddress(chainId), web3)\n}\n\nexport const getERC20Contract = (address, web3) => {\n    return getContract(ERC20Abi, address, web3)\n}","import { isAddress } from '@ethersproject/address'\nimport { useWeb3React } from '@web3-react/core'\nimport { useMemo } from 'react'\nimport {\n    getERC20Contract, getMasterChefContract, getSushiRouter\n} from '../utils/contractHelpers'\nimport useWeb3 from './useWeb3'\n\n\nexport const useERC20 = (address) => {\n    const web3 = useWeb3()\n    return useMemo(() => {\n        if (!isAddress(address)) return null\n        return getERC20Contract(address, web3)\n    }, [address, web3])\n}\n\nexport const useMasterChef = () => {\n    const web3 = useWeb3()\n    const { chainId } = useWeb3React()\n    return useMemo(() => getMasterChefContract(web3, chainId), [web3, chainId])\n}\n\nexport const useSusiRouter = () => {\n    const web3 = useWeb3()\n    const { chainId } = useWeb3React()\n    return useMemo(() => getSushiRouter(web3, chainId), [web3, chainId])\n}\n\n","import { ethers } from 'ethers'\nimport { getSushiRouter } from './contractHelpers'\nimport { toWei } from './formatNumber'\n\nexport const approve = async (lpContract, contractAddress, account) => {\n  return lpContract.methods\n    .approve(contractAddress, ethers.constants.MaxUint256.toString())\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, toWei(amount).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, toWei(amount).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const getSushiAmountsOut = async (\n  fromCurrency,\n  toCurrency,\n  amountIn,\n  web3,\n  chainId\n) => {\n\n  const sushiGetAmountsOut = async (amountIn, path = []) => {\n    console.log(amountIn.toString(), path);\n    try {\n      const amountsOut = await getSushiRouter(web3, chainId)\n        .methods.getAmountsOut(amountIn, path)\n        .call()\n      return amountsOut[amountsOut.length - 1]\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return await sushiGetAmountsOut(toWei(amountIn, fromCurrency.decimals), [fromCurrency.address, toCurrency.address])\n}","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n// import { approve } from './callHelper'\nimport { useMasterChef } from './useContract'\nimport { unstake } from '../utils/callHelpers'\n\nexport const useUnStake = (farm, amount) => {\n    const { account, chainId } = useWeb3React()\n    const masterChefContract = useMasterChef()\n    const handleUnStake = useCallback(async () => {\n        try {\n            const tx = await unstake(\n                masterChefContract,\n                farm.pid,\n                amount,\n                account\n            )\n            return tx\n        } catch (e) {\n            return false\n        }\n    }, [account, chainId, amount, masterChefContract])\n\n    return { onUnStake: handleUnStake }\n}","export const getLibrary = (provider = null) => (provider)\n\nexport const formatAddress = (address) => {\n    return `${address.slice(0, 6)}...${address.slice(-6)}`\n}\n\nexport const getExplorerAddress = (tokenAddresses, chainId = 250) => {\n    if (chainId === 3) {\n        return `https://ropsten.etherscan.io/address/${tokenAddresses[chainId]}`\n\n    }\n    if (chainId === 250) {\n        return `https://ftmscan.com/address/${tokenAddresses[chainId]}`\n    }\n}\n\nexport const isDesktop = () => {\n    var isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    return ((typeof window.orientation === \"undefined\") || (navigator.userAgent.indexOf('IEMobile') === -1)) && !(isMobile);\n};","import { makeAutoObservable } from 'mobx'\n\nclass Store {\n  show_connect = false\n  show_amount_popup = false\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  showConnectPopup() {\n    this.show_connect = true\n  }\n  hideConnectPopup() {\n    this.show_connect = false\n  }\n\n  showAmountPopup() {\n    this.show_amount_popup = true\n  }\n\n  hideAmountPopup() {\n    this.show_amount_popup = false\n  }\n}\n\nconst store = new Store()\n\nexport default store\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport store from '../store';\n\nconst StakeModal = ({ show, onClose, onConfirm, amount, symbol, inputAmount, setInputAmount, onMax }) => {\n    return (<Modal\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        className=\"amount-popup \"\n        show={show}\n        onHide={onClose}\n    >\n        <Modal.Header closeButton>\n            <Modal.Title>Deposit {symbol} Tokens</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"p-4\">\n            <div className=\"text-right small\">{amount} {symbol} available</div>\n            <div>\n                <input className=\"w-100 p-2 my-2\" type=\"number\" value={inputAmount || \"\"} min=\"0\" onChange={(e) => setInputAmount(e.currentTarget.value)} />\n                <button className=\"btn btn-secondary btn-sm max-btn\" onClick={onMax}>MAX</button>\n            </div>\n            <div className=\"d-flex flex-row justify-content-between\">\n                <button className=\"btn btn-light border col-6 mr-1\" onClick={onClose}>Cancel</button>\n                <button className=\"btn btn-primary border col-6 ml-1\" onClick={onConfirm}>\n                    Confirm\n            </button>\n            </div>\n        </Modal.Body>\n    </Modal>);\n}\n\nexport default StakeModal;","import { useWeb3React } from '@web3-react/core';\nimport { observer } from 'mobx-react';\nimport React, { useCallback, useState } from 'react';\nimport { useApprove } from '../hooks/useApprove';\nimport { useStake } from '../hooks/useStake';\nimport { useUnStake } from '../hooks/useUnStake';\nimport { getExplorerAddress } from '../utils';\nimport { getMasterChefAddress } from '../utils/addressHelpers';\nimport StakeModal from './StakeModal';\nimport './farm.scss'\nimport BigNumber from 'bignumber.js';\nimport { isZero, ZERO } from '../config/constants/numbers';\nimport { getFullDisplayBalance } from '../utils/formatNumber';\nimport store from '../store'\n\nconst Farm = ({ farm, prices, userInfo, index, forceUpdate }) => {\n\n    const { account, chainId } = useWeb3React()\n    const MasterChefAddress = getMasterChefAddress(chainId)\n    // const [forceUpdate, setForceUpdate] = useState(0)\n    const [stakePopup, setStakePopup] = useState(false)\n    const [unStakePopup, setUnStakePopup] = useState(false)\n    const [details, setDetails] = useState(false)\n    const [stakeInput, setStakeInput] = useState(0)\n    const [unStakeInput, setUnStakeInput] = useState(0)\n    const [requestedApproval, setRequestedApproval] = useState(true)\n    // const allowance = useAllowance(farm, MasterChefAddress, chainId, forceUpdate)\n\n    const { onApprove } = useApprove(farm, MasterChefAddress, chainId)\n    const { onStake } = useStake(farm, stakeInput)\n    const { onUnStake } = useUnStake(farm, unStakeInput)\n    const { onUnStake: onHarvest } = useUnStake(farm, 0)\n\n    // const userInfo = useFarmFromPid(index, forceUpdate)\n\n    // const userInfo = users ? users[index] : null\n    const lpBalance = userInfo ? getFullDisplayBalance(userInfo.tokenBalance, 18) : 0\n    const stakedBalance = userInfo ? getFullDisplayBalance(userInfo.stakedBalance) : 0\n    const earnings = userInfo ? getFullDisplayBalance(userInfo.earnings) : 0\n    const allowance = userInfo ? new BigNumber(userInfo.allowance) : ZERO\n\n    const handleApprove = useCallback(async () => {\n        try {\n            const tx = await onApprove()\n            if (tx.status) {\n                setRequestedApproval(false)\n                forceUpdate()\n            } else {\n                console.log(\"Approve Failed\");\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }, [onApprove])\n\n    const handleStake = useCallback(async () => {\n        try {\n            const tx = await onStake()\n            if (tx.status) {\n                forceUpdate()\n\n            } else {\n                console.log(\"Stake Failed\");\n            }\n            setStakePopup(false)\n\n        } catch (e) {\n            console.error(e)\n        }\n    }, [onStake])\n\n    const handleUnStake = useCallback(async (amount) => {\n        try {\n            const tx = await onUnStake()\n            if (tx.status) {\n                forceUpdate()\n\n            } else {\n                console.log(\"UnStake Failed\");\n            }\n            setUnStakePopup(false)\n        } catch (e) {\n            console.error(e)\n        }\n    }, [onUnStake])\n\n    const handleHarvest = useCallback(async () => {\n        try {\n            const tx = await onHarvest()\n            if (tx.status) {\n                forceUpdate()\n\n            } else {\n                console.log(\"Harvest Failed\");\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }, [onHarvest])\n\n    const { lqdrPerBlock, lpTotalInQuoteToken, multiplier, poolWeight } = farm\n    const lqdrPrice = new BigNumber(prices[\"LQDR\"])\n\n    return (<>\n        <div className=\"col-md-4\">\n            <div className=\"deposit-cell\">\n                <div className=\"deposit-cell-header px-4\">\n                    <img src={`/img/farm_icons/${farm.icon}`} className=\"farm-icon ml-2\" onClick={() => forceUpdate()} />\n                    <div className=\"text-right overflow-hidden\">\n                        <div className=\"deposit-cell-header-text\">{farm.lpSymbol}</div>\n                        <div className=\"px-3 text-bold text-center text-primary d-inline rounded-2\" style={{ background: '#61AAFE' }}>{farm?.multiplierShow}</div>\n                    </div>\n                </div>\n                <div className=\"deposit-cell-content px-4 py-2\">\n                    {account && <div className=\"earn-container\">\n                        <div>\n                            <div className=\"text-primary small\">LQDR Earned</div>\n                            <div className=\"text-white large font-weight-bold\">\n                                {isZero(earnings) ? \"0\" : Number(earnings).toFixed(4)}\n                            </div>\n                            <div className=\"text-primary smaller\">-{lqdrPrice.times(earnings).toFixed(2)}USD</div>\n                        </div>\n                        <div className=\"d-flex align-items-center\" onClick={handleHarvest}>\n                            <div className=\"btn btn-secondary\">Harvest</div>\n                        </div>\n                    </div>}\n                    {!account ?\n                        <div className=\"btn btn-secondary w-100 my-4\"\n                            onClick={() => {\n                                store.showConnectPopup()\n                            }}>\n                            Connect Wallet\n                        </div>\n                        :\n                        !requestedApproval || allowance.gt(0) ?\n                            <div className=\"text-center\"><div className=\"col-5  center btn btn-primary w-100 my-4 mx-2\"\n                                onClick={\n                                    () => {\n                                        setStakePopup(true)\n                                    }}>\n                                Stake\n                            </div>\n                                <div className=\"col-5 center btn btn-primary w-100 my-4 mx-2\"\n                                    onClick={\n                                        () => {\n                                            setUnStakePopup(true)\n                                        }}>\n                                    Withdraw\n                                </div>\n                            </div>\n                            :\n                            <div className=\"btn btn-primary w-100 my-4\"\n                                onClick={handleApprove}>\n                                Approve Pool\n                            </div>\n                    }\n\n                    <div className=\"d-flex justify-content-between\">\n                        <div className=\"text-white\">APR:</div>\n                        <div className=\"text-white\">\n                            {prices[farm.quoteTokenSymbol] !== 0 && !isZero(lpTotalInQuoteToken) && !isNaN(poolWeight) ?\n                                new BigNumber(lqdrPerBlock.times(poolWeight).times(prices[\"LQDR\"]).times(31536000))\n                                    .div(lpTotalInQuoteToken.times(prices[farm.quoteTokenSymbol])).times(100).toFixed(0)\n                                : \"0\"\n                            } %\n                        </div>\n                    </div>\n\n                    {account && <div className=\"d-flex justify-content-between\">\n                        <div className=\"text-white\">Your Stake:</div>\n                        <div className=\"text-white\">{isZero(stakedBalance) ? 0 : new BigNumber(stakedBalance).toFixed(3)} {farm.lpSymbol}</div>\n                    </div>}\n\n                    <div className=\"w-100 my-4 see-details\" onClick={() => setDetails(!details)}>\n                        <span>See Details</span>\n                        <i className={details ? \"fas fa-sort-up\" : \"fas fa-sort-down\"} style={details ? {\n                            marginTop: '0.5rem'\n                        } : {\n                            marginBottom: '0.5rem'\n                        }}></i>\n                    </div>\n\n                    {details && <>\n                        <div className=\"d-flex justify-content-between\">\n                            <div className=\"text-white\">Total Staked:</div>\n                            <div className=\"text-white\"> {farm?.totalStaked}  {farm.lpSymbol}</div>\n                        </div>\n                        <div className=\"d-flex justify-content-between\">\n                            <div className=\"text-white\">Deposit fee:</div>\n                            <div className=\"text-white\"> {farm?.depositFeeBP / 100}%</div>\n                        </div>\n                        {/* <div className=\"d-flex justify-content-between\">\n                            <div className=\"text-white\">poolWeight:</div>\n                            <div className=\"text-white\"> {farm?.poolWeight} </div>\n                        </div>\n                        <div className=\"d-flex justify-content-between\">\n                            <div className=\"text-white\">tokenPriceVsQuote:</div>\n                            <div className=\"text-white\"> {farm?.tokenPriceVsQuote} </div>\n                        </div>\n                        <div className=\"d-flex justify-content-between\">\n                            <div className=\"text-white\">lpTotalInQuoteToken:</div>\n                            <div className=\"text-white\"> {farm?.lpTotalInQuoteToken.toFixed(5)} </div>\n                        </div> */}\n                        {/* <div className=\"d-flex justify-content-between\">\n                            <div className=\"text-white\">tokenAmount:</div>\n                            <div className=\"text-white\"> {farm?.tokenAmount} </div>\n                        </div> */}\n                    </>\n                    }\n\n                    {/* <div className=\"d-flex justify-content-between\">\n                    <div className=\"text-white\">End:</div>\n                    <div className=\"text-white\">0SUSHI</div>\n                </div> */}\n\n                    <div className=\"my-2\">\n                        <a className=\"text-white\" href={getExplorerAddress(farm.lpAddresses, chainId)} rel=\"none refer\" target=\"_blank\">\n                            <i className=\"fas fa-clipboard\" />\n                            <u className=\"small ml-1 pointer\">View on ftmscan</u>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div >\n        <StakeModal\n            show={stakePopup}\n            onClose={() => setStakePopup(false)}\n            onConfirm={handleStake}\n            amount={lpBalance}\n            symbol={farm.lpSymbol}\n            inputAmount={stakeInput}\n            setInputAmount={setStakeInput}\n            onMax={() => setStakeInput(lpBalance)}\n        />\n        <StakeModal\n            show={unStakePopup}\n            onClose={() => setUnStakePopup(false)}\n            onConfirm={handleUnStake}\n            amount={stakedBalance}\n            symbol={farm.lpSymbol}\n            inputAmount={unStakeInput}\n            setInputAmount={setUnStakeInput}\n            onMax={() => setUnStakeInput(stakedBalance)}\n        />\n    </>);\n}\n\nexport default observer(Farm);","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n// import { approve } from './callHelper'\nimport { useERC20 } from './useContract'\nimport { approve } from '../utils/callHelpers'\n\nexport const useApprove = (farm, contractAddress) => {\n    const { account, chainId } = useWeb3React()\n    const lpAddress = farm?.lpAddresses[chainId]\n    const contract = useERC20(lpAddress)\n\n    const handleApprove = useCallback(async () => {\n        try {\n            const tx = await approve(\n                contract,\n                contractAddress,\n                account\n            )\n            return tx\n        } catch (e) {\n            return false\n        }\n    }, [account, chainId, lpAddress, contract, contractAddress])\n\n    return { onApprove: handleApprove }\n}","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useMasterChef } from './useContract'\nimport { stake } from '../utils/callHelpers'\n\nexport const useStake = (farm, amount) => {\n    const { account, chainId } = useWeb3React()\n    const masterChefContract = useMasterChef()\n\n    const handleStake = useCallback(async () => {\n        try {\n            const tx = await stake(\n                masterChefContract,\n                farm.pid,\n                amount,\n                account\n            )\n            return tx\n        } catch (e) {\n            return false\n        }\n    }, [account, chainId, amount, masterChefContract])\n\n    return { onStake: handleStake }\n}","import { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport Farm from '../components/Farm'\nimport { useFarms } from '../hooks/useFarms'\nimport { usePrices } from '../hooks/usePrices'\nimport { useFarmsUser } from '../hooks/useFarmsUser'\nimport './Deposit.scss'\n// const deposits = [1]\n\nfunction DepositPage() {\n  const [update, setUpdate] = useState(0)\n  const farms = useFarms(update)\n  const prices = usePrices(update)\n  const users = useFarmsUser(update)\n\n  const forceUpdate = () => {\n    setUpdate(update => update + 1)\n  }\n\n\n  return (\n    <div className=\"deposit\">\n      <div className=\"d-flex flex-column\">\n        <div className=\"text-center d-flex flex-column w-100 justify-content-center align-items-center text-white top-view\">\n          <img\n            src={`${process.env.PUBLIC_URL}/img/top_bg.jpg`}\n            className=\"w-100 position-absolute top-img\"\n          />\n          <h2 className=\"font-weight-extra-bold\">LIQUID CONTAINERS</h2>\n          <p className=\"pt-2 pb-4\">Stake SUSHI LP Tokens, Earn LQDR</p>\n          <button className=\"font-weight-bold btn btn-primary rounded-2 px-5 used-bt\">\n            Deposit Fee will be used to buy back LQDR and burn it.\n          </button>\n          <div className=\"d-flex flex-row p-4\">\n            <div className=\"custom-control custom-switch mx-4\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"stake\"\n                readOnly\n              />\n              <label className=\"custom-control-label\" htmlFor=\"stake\">\n                Stacked Only\n              </label>\n            </div>\n\n            <div className=\"custom-control custom-switch mx-4\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"active\"\n                readOnly\n              />\n              <label className=\"custom-control-label\" htmlFor=\"active\">\n                Active\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"pools w-100 my-5 px-4\">\n          <div className=\"row p-0 cell-row\">\n            {farms && farms.map((farm, index) => (\n              <Farm key={index} index={index} userInfo={users ? users[index] : null} farm={farm} forceUpdate={() => forceUpdate()} prices={prices} />\n            ))}\n          </div>\n        </div>\n        <div style={{ height: '64px' }}></div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default observer(DepositPage)\n","import { useWeb3React } from \"@web3-react/core\"\nimport { useEffect, useState } from \"react\"\nimport useRefresh from \"./useRefresh\";\nimport { fetchFarmUserDataAsync } from \"../fetchFarmUser\";\nimport useWeb3 from \"./useWeb3\";\n\n\nexport const useFarmsUser = (forceUpdate) => {\n    const [users, setUsers] = useState(null)\n    const web3 = useWeb3()\n    const { chainId, account } = useWeb3React()\n    const { fastRefresh } = useRefresh()\n    useEffect(() => {\n        const getUserData = async () => {\n            try {\n                const data = await fetchFarmUserDataAsync(web3, account, chainId)\n                // console.log(data);\n                setUsers(data)\n                // console.info('getUserData fetched:', data)\n            } catch (e) {\n                console.error(\"getUserData fetched had error\", e)\n            }\n        }\n        if (web3 && account) {\n            getUserData()\n        }\n    }, [account, chainId, fastRefresh, forceUpdate])\n\n    return users\n}\n","\nimport React, { useState } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { observer } from 'mobx-react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useMediaQuery } from 'react-responsive'\n\nimport store from '../store'\nimport './Navbar.scss'\n\nconst LiquidNavbar = () => {\n    const [menu, setMenu] = useState(false)\n    const { account, deactivate } = useWeb3React()\n    const isDesktop = useMediaQuery({\n        query: '(min-device-width: 768px)'\n    })\n\n    return (<Navbar bg=\"dark\" variant=\"dark\" className=\"sidebar\" style={{ zIndex: 100 }} expand=\"md\">\n        <Navbar.Brand href=\"/\" className=\"d-flex align-items-center\">\n            <img\n                src={`${process.env.PUBLIC_URL}/img/logo.png`}\n                style={{ width: '2em', marginRight: '0.5rem' }}\n                alt=\"logo\"\n            />\n            <span className=\"title\">Liquid Driver</span>\n        </Navbar.Brand>\n\n        {!isDesktop && <div className=\"collapsible-content\">\n            <button className=\"navbar-toggler toggler-example\" onClick={() => {\n                setMenu(!menu)\n            }}>\n                <span className=\"dark-blue-text\"><i className=\"fas fa-bars fa-1x\" /></span>\n            </button>\n        </div>\n        }\n\n        { (isDesktop || menu) && <Nav className=\"ml-auto\">\n            <Nav.Item>\n                <Nav.Link href=\"https://github.com/liquiddriver\" className=\"font-weight-bold mx-2\">\n                    GitHub\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link\n                    href=\"https://multichain.xyz/\"\n                    className=\"font-weight-bold mx-2\"\n                >\n                    Bridge\n                </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item>\n                <Nav.Link\n                    href=\"https://medium.com/@LiquidDriver\"\n                    className=\"font-weight-bold mx-2\"\n                >\n                    Medium\n                </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item>\n                <Nav.Link\n                    href=\"https://docs.liquiddriver.finance/\"\n                    className=\"font-weight-bold mx-2\"\n                >\n                    Documentation\n                </Nav.Link>\n            </Nav.Item>\n\n            {account && (<>\n                <Nav.Item>\n                    <Nav.Link\n                        className=\"font-weight-bold bg-primary px-3 mx-2 rounded-2 account-bt\"\n                        onClick={() => { }}\n                    >\n                        Account:{' '}\n                        {account.substring(0, 5) +\n                            '...' +\n                            account[account.length - 1]}\n                    </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link\n                        className=\"font-weight-bold bg-danger px-3 mx-2 rounded-2 account-bt\"\n                        onClick={deactivate}\n                    >\n                        Disconnect\n                            </Nav.Link>\n                </Nav.Item></>\n            )}\n            {!account && (\n                <Nav.Item>\n                    <Nav.Link\n                        className=\"font-weight-bold bg-primary px-3 mx-2 rounded-2 text-nowrap account-bt\"\n                        onClick={() => {\n                            store.showConnectPopup()\n                        }}\n                    >\n                        Connect Wallet\n                            </Nav.Link>\n                </Nav.Item>\n            )}\n        </Nav>}\n    </Navbar >);\n}\n\nexport default observer(LiquidNavbar);\n\n\n\n","import { InjectedConnector } from '@web3-react/injected-connector';\n\n\nconst supportedChainIds = [\n    // 3, // Ropsten\n    250, // FTM\n]\n\nexport const injected = new InjectedConnector({\n    supportedChainIds\n})\n\nexport const ConnectorNames = {\n    Injected: 'MetaMask',\n}\n\nexport const connectorsByName = {\n    [ConnectorNames.Injected]: injected,\n}\n\n// const RPC_URLS = {\n//     3: \"https://ropsten.infura.io/v3/df9a2cbc416c4aa5ba4b9c85f57f756d\",\n//     250: \"https://rpcapi.fantom.network\",\n// }","export const addRPC = (account, chainId = 250) => {\n    console.log(account, chainId)\n\n    if ((window.ethereum)) {\n        window.ethereum\n            .request({\n                method: 'wallet_addEthereumChain',\n                params: [{ ...NetworksData[chainId] }],\n            })\n            .then((result) => {\n                console.log(\"success\");\n            })\n            .catch((error) => {\n                console.log('We can encrypt anything without the key.');\n            });\n    }\n}\n\nconst NetworksData = {\n    250: {\n        chainId: \"0xFA\",\n        chainName: \"Fantom Opera\",\n        nativeCurrency: {\n            name: \"Fantom\",\n            symbol: \"FTM\",\n            decimals: 18,\n        },\n        rpcUrls: [\"https://rpcapi.fantom.network\"],\n        blockExplorerUrls: [\"https://ftmscan.com/\"],\n        iconUrls: []\n    },\n\n}","import React from 'react';\nimport { Modal } from 'react-bootstrap'\nimport { useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { useWeb3React } from '@web3-react/core'\nimport { UnsupportedChainIdError } from '@web3-react/core'\nimport { NotificationManager } from 'react-notifications'\nimport { injected } from '../connectors'\nimport store from '../store'\nimport { addRPC } from '../utils/addRPC';\n\nconst Wallets = () => {\n\n    const { account, chainId, activate, error } = useWeb3React()\n    console.log(account, chainId, error);\n\n    useEffect(() => {\n        if (account) {\n            store.hideConnectPopup()\n        }\n    }, [account, chainId])\n\n    useEffect(() => {\n        if (error instanceof UnsupportedChainIdError) {\n            NotificationManager.error(\n                <>\n                    <p>Please make sure to set the right network (Fantom Network) </p>\n                    <div style={{ background: \"blue\", display: \"inline-block\", borderRadius: \"6px\", textAlign: \"center\", padding: \"10px 10px\", margin: \"auto\", marginTop: \"20px\" }} onClick={() => addRPC(account, 250)}>Switch to Fantom</div>\n                </>, 'Error'\n            )\n        }\n    }, [error])\n\n    return (\n        <Modal\n            size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            className=\"connect-wallet\"\n            show={store.show_connect}\n            onHide={() => {\n                store.hideConnectPopup()\n            }}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Connect to a wallet</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div\n                    className=\"connect-wallet-row\"\n                    onClick={() => {\n                        console.info('Connect Matamask!')\n                        activate(injected)\n                    }}\n                >\n                    <div>Metamask</div>\n                    <img\n                        src={`${process.env.PUBLIC_URL}/img/metamask.png`}\n                        className=\"logo\"\n                        alt=\"logo\"\n                    />\n                </div>\n\n                <div className=\"connect-wallet-row disabled\">\n                    <div>Trust Wallet</div>\n                    <img\n                        src={`${process.env.PUBLIC_URL}/img/trust_wallet.png`}\n                        className=\"logo\"\n                        alt=\"logo\"\n                    />\n                </div>\n\n                <div className=\"connect-wallet-row disabled\">\n                    <div>TokenPocket Wallet</div>\n                    <img\n                        src={`${process.env.PUBLIC_URL}/img/token_pocket_wallet.png`}\n                        className=\"logo\"\n                        alt=\"logo\"\n                    />\n                </div>\n\n                <div className=\"connect-wallet-row disabled\">\n                    <div>WalletConnect</div>\n                    <img\n                        src={`${process.env.PUBLIC_URL}/img/wallet_connect.png`}\n                        className=\"logo\"\n                        alt=\"logo\"\n                    />\n                </div>\n\n                <div className=\"text-center\">\n                    <a className=\"btn btn-link\" role=\"button\">\n                        <i className=\"far fa-question-circle h5 mr-1\" />\n              Learn how to connect wallet\n            </a>\n                </div>\n            </Modal.Body>\n        </Modal>);\n}\n\nexport default observer(Wallets);\n\n","import { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { observer } from 'mobx-react'\nimport { NotificationContainer } from 'react-notifications'\nimport Home from './pages/Home'\nimport Deposit from './pages/Deposit'\nimport Navbar from './components/LiquidNavbar'\nimport Wallets from './components/Wallets'\nimport { RefreshContextProvider } from './context/RefreshContext'\nimport 'react-notifications/lib/notifications.css'\nimport './App.scss'\n\nfunction App() {\n  return (\n\n    <div>\n      <Navbar />\n      <Wallets />\n      <RefreshContextProvider>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/deposit\">\n              <Deposit />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </RefreshContextProvider>\n      <NotificationContainer />\n    </div >\n  )\n}\n\nexport default observer(App)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEagerConnect, useInactiveListener } from '../hooks'\n\nexport default function Web3ReactManager({ children }) {\n    const context = useWeb3React()\n    const { connector, chainId, active, networkError } = context\n    const triedEager = useEagerConnect()\n\n    // handle logic to recognize the connector currently being activated\n    const [activatingConnector, setActivatingConnector] = useState()\n\n    useEffect(() => {\n        if (activatingConnector && activatingConnector === connector) {\n            setActivatingConnector(undefined)\n        }\n    }, [activatingConnector, connector, chainId])\n\n    // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n    useInactiveListener(!triedEager)\n\n    // on page load, do nothing until we've tried to connect to the injected connector\n    if (!triedEager) {\n        return null\n    }\n\n    // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\n    if (!active && networkError) {\n        console.log(\"unknownError\");\n        return (\n            <>\n                unknownError\n            </>\n        )\n    }\n\n\n    return children\n\n}","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core';\nimport { injected } from './connectors';\n\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3React()\n\n    const [tried, setTried] = useState(false)\n\n    useEffect(() => {\n        injected.isAuthorized().then((isAuthorized) => {\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setTried(true)\n                })\n            } else {\n                setTried(true)\n            }\n        })\n    }, []) //eslint-disable-line\n    //intentionally only running on mount(make sure it's only mounted once :))\n\n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n        if (!tried && active) {\n            setTried(true)\n        }\n    }, [tried, active])\n\n    return tried\n}\n\nexport function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3React()\n\n    useEffect(() => {\n        const { ethereum } = window\n\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            const handleChainChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch(error => {\n                    console.error('Failed to activate after chain changed', error)\n                })\n            }\n\n            const handleAccountsChanged = (accounts) => {\n                if (accounts.length > 0) {\n                    // eat errors\n                    activate(injected, undefined, true).catch(error => {\n                        console.error('Failed to activate after accounts changed', error)\n                    })\n                }\n            }\n\n            ethereum.on('chainChanged', handleChainChanged)\n            ethereum.on('accountsChanged', handleAccountsChanged)\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener('chainChanged', handleChainChanged)\n                    ethereum.removeListener('accountsChanged', handleAccountsChanged)\n                }\n            }\n        }\n        return undefined\n    }, [active, error, suppress, activate])\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport Web3ReactManager from './utils/Web3ReactManager';\nimport { getLibrary } from './utils'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Web3ReactManager>\n        <App />\n      </Web3ReactManager>\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}